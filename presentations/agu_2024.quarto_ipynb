{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "draft: false\n",
        "title: \"Sensitivity Analysis of Spatial Scale and Particle Density on Overland Flow Pattern Accuracy and Computational Demand\"\n",
        "title-slide-attributes:\n",
        "    data-color: grass-color-primary\n",
        "page-layout: full\n",
        "title-block-banner: true\n",
        "image: ../output/clay-center/slope.png\n",
        "subtitle: \"AGU 2024, Washington D.C\"\n",
        "author:\n",
        "  - name: \"Corey White\"\n",
        "    degrees: PhD\n",
        "    url: \"https://cwhite911.github.io/\"\n",
        "    orcid: \"0000-0002-2903-9924\"\n",
        "    email: \"ctwhite@ncsu.edu\"\n",
        "    affiliations:\n",
        "      - ref: cga\n",
        "      - ref: op\n",
        "  - name: \"Caitlin Haedrich\"\n",
        "    url: \"https://chaedri.github.io/\"\n",
        "    orcid: \"0000-0003-4373-5691\"\n",
        "    email: \"chaedri@ncsu.edu\"\n",
        "    affiliations:\n",
        "      - ref: cga\n",
        "  - name: \"Helena Mitasova\"\n",
        "    degrees: PhD\n",
        "    url: \"https://meas.sciences.ncsu.edu/people/hmitaso/\"\n",
        "    orcid: \"0000-0002-6906-3398\"\n",
        "    email: \"hmitaso@ncsu.edu\"\n",
        "    affiliations:\n",
        "      - ref: cga\n",
        "      - ref: meas\n",
        "date: \"Thursday, 12 December 2024\"\n",
        "acknowledgements: |\n",
        "    This talk was funded by the [US National Science Foundation (NSF)](https://www.nsf.gov/), award [2303651](https://www.nsf.gov/awardsearch/showAward?AWD_ID=2303651) and [USDA Natural Resources Conservation Service (NRCS)](https://www.nrcs.usda.gov/).\n",
        "affiliations:\n",
        "  - id: cga\n",
        "    name: Center for Geospatial Analytics at NC State University\n",
        "    url: \"https://cnr.ncsu.edu/geospatial/\"\n",
        "  - id: op\n",
        "    name: OpenPlains Inc.\n",
        "    url: \"https://openplains.com\"\n",
        "  - id: meas\n",
        "    name: Marine, Earth and Atmospheric Sciences\n",
        "    url: \"https://meas.sciences.ncsu.edu/\"\n",
        "format:\n",
        "  revealjs:\n",
        "    theme: [simple, ../grass.scss]\n",
        "    footer: \"[Return Home](/)\"\n",
        "\n",
        "    template-partials:\n",
        "      - ../templates/title-slide.html\n",
        "    controls-layout: bottom-right\n",
        "---\n",
        "\n",
        "\n",
        "# What is SIMWE? {transition=\"slide\" transition-speed=\"medium\"}\n",
        "\n",
        "**SIMWE** (SIMulation of Water Erosion Model) is a spatially distributed processes-based overland flow model that simulates water flow.\n",
        "\n",
        "## How does SIMWE work? {transition=\"slide\" transition-speed=\"medium\"}\n",
        "\n",
        ":::{.columns}\n",
        ":::{.column width=60%}\n",
        "SIMWE uses **Green’s function** to solve the **St. Venant system of equations** via a **Monte Carlo path sampling method**.\n",
        ":::\n",
        ":::{.column width=40%}\n",
        "![](images/evolfig.jpg){}\n",
        ":::\n",
        ":::\n",
        "\n",
        "\n",
        "# Why this method? {transition=\"slide\" transition-speed=\"medium\"}\n",
        "\n",
        "Water flows according to the shallow water bivariate **continuity equation** (mass conservation), incorporating **drift** and **diffusion**, which allows the **elevation model** to remain **unmodified** (e.g., no sink and fill processing).\n",
        "\n",
        "$$\n",
        "\\frac{∂h}{∂t}+(\\frac{∂hv_x}{∂x}+\\frac{∂hv_y}{∂y}) = 0\n",
        "$$\n",
        "\n",
        "---\n",
        "\n",
        "## Path Sampling Method {transition=\"slide\" transition-speed=\"medium\"}\n",
        "\n",
        "Solution of SWF equation incorporates spatially variable flow velocity\n",
        "\n",
        "* **Variable rainfall excess** (impact of soils and land cover on infiltration),\n",
        "* **Topography** (slope steepness)\n",
        "* **Land cover** (Mannings roughness coefficient)\n",
        "\n",
        "## Path Sampling Accuarcy {transition=\"slide\" transition-speed=\"medium\"}\n",
        "\n",
        "Error is proportional to $1/\\sqrt{N}$\n",
        "\n",
        "where $N$ is number of particles. \n",
        "\n",
        "## Computational Demands of Overland Flow Modeling {transition=\"slide\" transition-speed=\"medium\" .smaller}\n",
        "\n",
        ":::{.columns}\n",
        ":::{.column width=50%}\n",
        "\n",
        "::: {.fragment .highlight-current-blue}\n",
        "- Restrictive for research and policy development\n",
        ":::\n",
        "\n",
        "::: {.fragment .highlight-current-blue}\n",
        "- Emergency management applications require rapid response times\n",
        ":::\n",
        "\n",
        "::: {.fragment .highlight-current-blue}\n",
        "- Accuracy depends on particle density\n",
        ":::\n",
        "\n",
        "::: {.fragment .highlight-current-blue}\n",
        "- Spatial scale influences particle density required for accurate results\n",
        ":::\n",
        "\n",
        ":::\n",
        ":::{.column width=50%}\n",
        "![](/notebooks/output/clay-center_depth_1_1_s_prob.webp)\n",
        ":::\n",
        ":::\n",
        "\n",
        "# Why is this a problem? {transition=\"slide\" transition-speed=\"medium\" .smaller}\n",
        "The accuracy of overland flow simulations using path sampling methods depends heavily on particle density.\n",
        "However, varying particle density and spatial scale can be computationally demanding.\n",
        "\n",
        "# How did we approach this problem? {transition=\"slide\" transition-speed=\"medium\" .smaller}\n",
        "We varied particle density and spatial scale to understand their impact on simulated water flow patterns.\n",
        "We also repeated our analysis on several different terrain types to account for terrain slope and complexity.\n",
        "\n",
        "## Study Areas {transition=\"slide\" transition-speed=\"medium\" .smaller}\n",
        "\n",
        "| Site | Area $km^2$ | Min Elv ($m$) | Max Elv ($m$) | Mean ($m$) | Std | |\n",
        "|---------|:-----|------:|---|---|---|---|\n",
        "| SJER | 0.29 |333.16|371.12|349.68|7.95| ![](../output/SJER/naip.png){width=18%} |\n",
        "| Clay Center | 1.52 |---|---|---|---| ![](../output/clay-center/naip.png){width=18%} |\n",
        "| Coweeta | 57.02 |---|---|---|---| ![](../output/coweeta/naip.png){width=18%} |\n",
        "| SFREC | 0.38 |---|---|---|---| ![](../output/SFREC/naip.png){width=18%} |\n",
        "| tx069-playas | 324.44 |---|---|---|---| ![](../output/tx069-playas/naip.png){width=18%} |\n",
        "\n",
        ": {.striped .hover .responsive-sm}\n",
        "\n",
        "# What did we find? {transition=\"slide\" transition-speed=\"medium\" .smaller}\n",
        "Our results show that there is a strong relationship between particle density, spatial scale, and computational demands.\n",
        "We also identified optimal particle density ranges for different spatial scales and terrain types.\n",
        "\n",
        "---\n",
        "\n",
        "## SJER - Mean Flow Depth {transition=\"slide\" transition-speed=\"medium\"}\n",
        "\n",
        "Particle Density: 4x\n",
        "\n",
        "::: {.r-hstack}\n",
        "::: {data-id=\"box1\" auto-animate-delay=\"0\" style=\"width: 200px; height: 200px; margin: 10px;\"}\n",
        "\n",
        "![1m](../output/SJER/sensitivity_1/SJER_depth_1_4_s_average.webp)\n",
        "\n",
        ":::\n",
        "::: {data-id=\"box1\" auto-animate-delay=\"0\" style=\"width: 200px; height: 200px; margin: 10px;\"}\n",
        "![3m](../output/SJER/sensitivity_1/SJER_depth_3_4_s_average.webp)\n",
        ":::\n",
        "\n",
        "::: {data-id=\"box1\" auto-animate-delay=\"0\" style=\"width: 200px; height: 200px; margin: 10px;\"}\n",
        "![5m](../output/SJER/sensitivity_1/SJER_depth_5_4_s_average.webp)\n",
        ":::\n",
        "\n",
        "::: {data-id=\"box1\" auto-animate-delay=\"0\" style=\"width: 200px; height: 200px; margin: 10px;\"}\n",
        "![10m](../output/SJER/sensitivity_1/SJER_depth_10_4_s_average.webp)\n",
        ":::\n",
        "\n",
        "::: {data-id=\"box1\" auto-animate-delay=\"0\" style=\"width: 200px; height: 200px; margin: 10px;\"}\n",
        "![30m](../output/SJER/sensitivity_1/SJER_depth_30_025_s_average.webp)\n",
        ":::\n",
        "\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "## SJER {auto-animate=true auto-animate-easing=\"ease-in-out\"}\n",
        "\n",
        "\n",
        "::: {.r-hstack}\n",
        "::: {data-id=\"box1\" style=\"\"}\n",
        "![](../output/SJER/sensitivity_1/SJER_depth_1_4_s_average.webp){.r-stretch}\n",
        ":::\n",
        "\n",
        "::: {data-id=\"box2\" style=\"\"}\n",
        "\n",
        ":::\n",
        "\n",
        "::: {data-id=\"box3\" style=\"\"}\n",
        "\n",
        ":::\n",
        "\n",
        "::: {data-id=\"box4\" style=\"\"}\n",
        ":::\n",
        "\n",
        "::: {data-id=\"box5\" style=\"\"}\n",
        "\n",
        ":::\n",
        "::: {data-id=\"box6\" style=\"\"}\n",
        "\n",
        ":::\n",
        ":::\n",
        "\n",
        "## SJER {auto-animate=true auto-animate-easing=\"ease-in-out\"}\n",
        "::: {.r-hstack}\n",
        "::: {data-id=\"box1\" auto-animate-delay=\"0\" style=\"width: 200px; height: 200px; margin: 10px;\"}\n",
        "![5 Min](../output/SJER/sensitivity_1/SJER_depth_1_4_s_05_average.png){width=200 hight=200}\n",
        ":::\n",
        "\n",
        "::: {data-id=\"box2\" auto-animate-delay=\"0.1\" style=\"width: 200px; height: 200px; margin: 10px;\"}\n",
        "![10 Min](../output/SJER/sensitivity_1/SJER_depth_1_4_s_10_average.png){width=200 hight=200}\n",
        ":::\n",
        "\n",
        "::: {data-id=\"box3\" auto-animate-delay=\"0.2\" style=\"width: 200px; height: 200px; margin: 10px;\"}\n",
        "![15 Min](../output/SJER/sensitivity_1/SJER_depth_1_4_s_15_average.png){width=200 hight=200}\n",
        ":::\n",
        "\n",
        "::: {data-id=\"box4\" auto-animate-delay=\"0.2\" style=\"width: 200px; height: 200px; margin: 10px;\"}\n",
        "![20 Min](../output/SJER/sensitivity_1/SJER_depth_1_4_s_20_average.png){width=200 hight=200}\n",
        ":::\n",
        "\n",
        "::: {data-id=\"box5\" auto-animate-delay=\"0.2\" style=\"width: 200px; height: 200px; margin: 10px;\"}\n",
        "![25 Min](../output/SJER/sensitivity_1/SJER_depth_1_4_s_25_average.png){width=200 hight=200}\n",
        ":::\n",
        "\n",
        "::: {data-id=\"box6\" auto-animate-delay=\"0.2\" style=\"width: 200px; height: 200px; margin: 10px;\"}\n",
        "![30 Min](../output/SJER/sensitivity_1/SJER_depth_1_4_s_30_average.png){width=200 hight=200}\n",
        ":::\n",
        ":::\n",
        "\n",
        "\n",
        "## Computaional Performance {auto-animate=true auto-animate-easing=\"ease-in-out\"}\n",
        "\n",
        "::: {.r-hstack}\n",
        "![](../output/SJER/sensitivity_1/SJER_run_time_res_line_plot.png)\n",
        "\n",
        "![](../output/SJER/sensitivity_1/SJER_mean_depth_res_line_plot.png)\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# What's next? {transition=\"slide\" transition-speed=\"medium\" .smaller}\n",
        "Our findings have implications for future users of the SIMWE model.\n",
        "We hope that our work will help optimize tradeoffs between accuracy and computational demand.\n",
        "\n",
        "# Test\n",
        "\n",
        "\n",
        "```{html}\n",
        "<!DOCTYPE html>\n",
        "<html lang=\"en\">\n",
        "<head>\n",
        "  <meta charset=\"UTF-8\">\n",
        "  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n",
        "  <title>SIMWE Visualization</title>\n",
        "  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/146/three.min.js\"></script>\n",
        "</head>\n",
        "<body style=\"margin: 0; overflow: hidden;\">\n",
        "  <script>\n",
        "    // Basic Scene Setup\n",
        "    const scene = new THREE.Scene();\n",
        "    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n",
        "    const renderer = new THREE.WebGLRenderer();\n",
        "    renderer.setSize(window.innerWidth, window.innerHeight);\n",
        "    document.body.appendChild(renderer.domElement);\n",
        "\n",
        "    // Create Terrain\n",
        "    const geometry = new THREE.PlaneGeometry(20, 20, 50, 50);\n",
        "    const material = new THREE.MeshStandardMaterial({ color: 0x88cc88, wireframe: false });\n",
        "    const terrain = new THREE.Mesh(geometry, material);\n",
        "    terrain.rotation.x = -Math.PI / 2;\n",
        "    scene.add(terrain);\n",
        "\n",
        "    // Add some height variations\n",
        "    const vertices = terrain.geometry.attributes.position.array;\n",
        "    for (let i = 0; i < vertices.length; i += 3) {\n",
        "      vertices[i + 2] = Math.random() * 2; // Random height\n",
        "    }\n",
        "    terrain.geometry.attributes.position.needsUpdate = true;\n",
        "\n",
        "    // Water Droplets\n",
        "    const dropletGeometry = new THREE.SphereGeometry(0.1, 16, 16);\n",
        "    const dropletMaterial = new THREE.MeshBasicMaterial({ color: 0x0000ff });\n",
        "    const droplets = [];\n",
        "\n",
        "    for (let i = 0; i < 50; i++) {\n",
        "      const droplet = new THREE.Mesh(dropletGeometry, dropletMaterial);\n",
        "      droplet.position.set(Math.random() * 20 - 10, 1, Math.random() * 20 - 10);\n",
        "      scene.add(droplet);\n",
        "      droplets.push(droplet);\n",
        "    }\n",
        "\n",
        "    // Lighting\n",
        "    const light = new THREE.DirectionalLight(0xffffff, 1);\n",
        "    light.position.set(10, 10, 10);\n",
        "    scene.add(light);\n",
        "\n",
        "    // Camera Position\n",
        "    camera.position.set(0, 15, 20);\n",
        "    camera.lookAt(0, 0, 0);\n",
        "\n",
        "    // Animation Loop\n",
        "    function animate() {\n",
        "      requestAnimationFrame(animate);\n",
        "\n",
        "      // Move droplets downhill\n",
        "      droplets.forEach(droplet => {\n",
        "        const x = Math.floor((droplet.position.x + 10) / 20 * 50);\n",
        "        const z = Math.floor((droplet.position.z + 10) / 20 * 50);\n",
        "\n",
        "        if (x >= 0 && z >= 0 && x < 50 && z < 50) {\n",
        "          const index = (x + z * 51) * 3 + 2;\n",
        "          const terrainHeight = vertices[index];\n",
        "          droplet.position.y = terrainHeight + 0.1;\n",
        "\n",
        "          // Move slightly downhill\n",
        "          droplet.position.x -= Math.random() * 0.05;\n",
        "          droplet.position.z -= Math.random() * 0.05;\n",
        "        }\n",
        "      });\n",
        "\n",
        "      renderer.render(scene, camera);\n",
        "    }\n",
        "\n",
        "    animate();\n",
        "\n",
        "    // Handle window resizing\n",
        "    window.addEventListener('resize', () => {\n",
        "      camera.aspect = window.innerWidth / window.innerHeight;\n",
        "      camera.updateProjectionMatrix();\n",
        "      renderer.setSize(window.innerWidth, window.innerHeight);\n",
        "    });\n",
        "  </script>\n",
        "</body>\n",
        "</html>\n",
        "```"
      ],
      "id": "3448c4f1"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/home/coreywhite/.local/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
